var b=require("basic-auth"),m=require("mime-types"),u=require("multer")(),a=require("express")(),{QuickDB:g}=require("quick.db"),{MongoDriver:h}=require("quickmongo"),i=new h(process.env.m);a.use(require("express-rate-limit")({windowMs:60*1000,max:10,standardHeaders:!0,legacyHeaders:!1}));a.use((A,_,c)=>{var d=["/","/remove"];if(d.includes(A.path)){var B=b(A);!B||B.name!==process.env.n||B.pass!==process.env.p?_.status(401).set("WWW-Authenticate",'Basic realm="Authorization Required"').send("Unauthorized"):c()}else c()});(async ()=>{await i.connect().then(()=>console.log(`Connected to the database!`));var A=new g({driver:i});a.get("/",async function(q,r){var c=[],d=await A.all();for(const _ of d)c.push(`<li><a href="/${_.id}" target="_blank">${_.value.fn}</a></li>`);r.send(`<!DOCTYPE html><html><head><link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"><script>function validateForm(){var fileInput=document.getElementById('file');var file=fileInput.files[0];if(!file){alert('Please select a file');return false;}}</script></head><body><div class="container mt-5"><form action="/upload" method="post" enctype="multipart/form-data" onsubmit="return validateForm()"><div class="form-group"><label for="file">Select a file:</label><input type="file" class="form-control-file" name="file" id="file" /></div><button type="submit" class="btn btn-primary">Upload</button></form><ul class="mt-3">${`${c}`.replaceAll(",","")}</ul></div><script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script><script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script><script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script></body></html>`)});a.post("/upload",u.single("file"),async function(q,r){var c=q.file.buffer,d=q.file.originalname,e=Buffer.from(require("crypto").randomBytes(6).toString("hex")).toString("base64");await A.set(e,{fn:d,ct:m.contentType(d),ab:c.toString("base64")});r.send(`File <a href="/${e}">here</a> <a href="/">back</a>`)});a.get("/remove",async function(q,r){if(q.query.id){var c=await A.get(q.query.id);if(q.query.id=="all"){await A.deleteAll();r.send(`deleted the db <a href="/">back</a>`)}else c?(await A.delete(`${q.query.id}`),r.send(`deleted ${c.fn} <a href="/">back</a>`)):(r.status(404).send(`404 <a href="/">back</a>`))}});a.get(/.*/,async function(q,r){var p=q.path,v=await A.get(p.replaceAll("/",""));v==null?r.status(404).send(`404 <a href="/">back</a>`):v&&(r.setHeader("Content-Type",v.ct),r.send(Buffer.from(v.ab,"base64")))});a.listen(0)})();
